ARG PYTHON_VERSION=3.11
ARG CUDA_VERSION=12.0
ARG BASE_CONTAINER=rapidsai/base:24.10-cuda${CUDA_VERSION}-py${PYTHON_VERSION}
FROM ${BASE_CONTAINER} AS base

ARG PYTHON_VERSION=3.11
USER root

SHELL ["/bin/bash", "-c"]

RUN apt-get -y update \
  && apt-get install -y \
    curl \
    procps \
    gcc \
    g++ \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*

RUN conda install conda-forge::libnuma \
    && conda clean --all -f -y

RUN pip install \
  numpy \
  scipy \
  pandas \
  numexpr \
  psutil \
  scikit-learn \
  sqlalchemy \
  tornado \
  xoscar \
  pyarrow \
  cloudpickle \
  azure-storage-blob \
  adlfs \
  fsspec \
  s3fs \
  pyopenssl \
  datasets \
  python-kubernetes \
  uvloop \
  Cython

RUN if [[ "$PYTHON_VERSION" < "3.12" ]] ; then \
  pip install -U 'setuptools<64' ; fi

# Copy Xorbits files
COPY . /opt/xorbits/

# Build extensions
RUN cd /opt/xorbits/python && \
    if [ "$PYTHON_VERSION" == "3.11" ] ; \
    then CFLAGS="-DCYTHON_FAST_THREAD_STATE=0" python setup.py build_ext -i ; \
    else python setup.py build_ext -i ; fi && \
    npm cache clean --force && \
    python setup.py build_web && \
    rm -rf /opt/xorbits/python/xorbits/web/ui/node_modules

# Setup service directory
RUN mkdir -p /srv
WORKDIR /srv

# Copy and setup entrypoint scripts
RUN cp /opt/xorbits/python/xorbits/deploy/docker/entrypoint.sh /srv/entrypoint.sh && \
    cp /opt/xorbits/python/xorbits/deploy/docker/install.sh /srv/install.sh && \
    chmod a+x /srv/*.sh

# Set Python path
ENV PYTHONPATH "${PYTHONPATH}:/opt/xorbits:/opt/xorbits/python"

# Set entrypoint
ENTRYPOINT [ "/srv/entrypoint.sh" ]
