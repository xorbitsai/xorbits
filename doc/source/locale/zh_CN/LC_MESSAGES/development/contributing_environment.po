# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2023, Xprobe Inc.
# This file is distributed under the same license as the Xorbits package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Xorbits \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-03 14:44+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../source/development/contributing_environment.rst:5
msgid "Creating a development environment"
msgstr ""

#: ../../source/development/contributing_environment.rst:7
msgid ""
"To test out code changes, you'll need to build Xorbits from source, which"
" requires a C/C++ compiler and Python environment. If you're making "
"documentation changes, you can skip to :ref:`contributing to the "
"documentation <contributing_documentation>` but if you skip creating the "
"development environment you won't be able to build the documentation "
"locally before pushing your changes. It's recommended to also install the"
" :ref:`pre-commit hooks <contributing.pre-commit>`."
msgstr ""

#: ../../source/development/contributing_environment.rst:14
msgid "Table of contents:"
msgstr ""

#: ../../source/development/contributing_environment.rst:17
msgid "Step 1: install a C compiler"
msgstr ""

#: ../../source/development/contributing_environment.rst:19
msgid ""
"How to do this will depend on your platform. If you choose to user "
"``Docker`` in the next step, then you can skip this step."
msgstr ""

#: ../../source/development/contributing_environment.rst:22
#: ../../source/development/contributing_environment.rst:133
msgid "**Windows**"
msgstr ""

#: ../../source/development/contributing_environment.rst:24
msgid ""
"You will need `Build Tools for Visual Studio 2022 "
"<https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-"
"studio-2022>`_."
msgstr ""

#: ../../source/development/contributing_environment.rst:28
msgid ""
"You DO NOT need to install Visual Studio 2022. You only need \"Build "
"Tools for Visual Studio 2022\" found by scrolling down to \"All "
"downloads\" -> \"Tools for Visual Studio\". In the installer, select the "
"\"Desktop development with C++\" Workloads."
msgstr ""

#: ../../source/development/contributing_environment.rst:33
msgid ""
"Alternatively, you can install the necessary components on the "
"commandline using `vs_BuildTools.exe <https://learn.microsoft.com/en-"
"us/visualstudio/install/use-command-line-parameters-to-install-visual-"
"studio?source=recommendations&view=vs-2022>`_"
msgstr ""

#: ../../source/development/contributing_environment.rst:36
msgid ""
"Alternatively, you could use the `WSL <https://learn.microsoft.com/en-"
"us/windows/wsl/install>`_ and consult the ``Linux`` instructions below."
msgstr ""

#: ../../source/development/contributing_environment.rst:39
msgid "**macOS**"
msgstr ""

#: ../../source/development/contributing_environment.rst:41
msgid ""
"To use the :ref:`mamba <contributing.mamba>`-based compilers, you will "
"need to install the Developer Tools using ``xcode-select --install``. "
"Otherwise information about compiler installation can be found here: "
"https://devguide.python.org/setup/#macos"
msgstr ""

#: ../../source/development/contributing_environment.rst:46
msgid "**Linux**"
msgstr ""

#: ../../source/development/contributing_environment.rst:48
msgid ""
"For Linux-based :ref:`mamba <contributing.mamba>` installations, you "
"won't have to install any additional components outside of the mamba "
"environment. The instructions below are only needed if your setup isn't "
"based on mamba environments."
msgstr ""

#: ../../source/development/contributing_environment.rst:52
msgid ""
"Some Linux distributions will come with a pre-installed C compiler. To "
"find out which compilers (and versions) are installed on your system::"
msgstr ""

#: ../../source/development/contributing_environment.rst:60
msgid ""
"`GCC (GNU Compiler Collection) <https://gcc.gnu.org/>`_, is a widely used"
" compiler, which supports C and a number of other languages. If GCC is "
"listed as an installed compiler nothing more is required."
msgstr ""

#: ../../source/development/contributing_environment.rst:64
msgid ""
"If no C compiler is installed, or you wish to upgrade, or you're using a "
"different Linux distribution, consult your favorite search engine for "
"compiler installation/update instructions."
msgstr ""

#: ../../source/development/contributing_environment.rst:68
msgid ""
"Let us know if you have any difficulties by opening an issue or reaching "
"out on our contributor community, join slack in `Community "
"<https://xorbits.io/community>`_."
msgstr ""

#: ../../source/development/contributing_environment.rst:72
msgid "Step 2: create an isolated environment"
msgstr ""

#: ../../source/development/contributing_environment.rst:74
msgid "Before we begin, please:"
msgstr ""

#: ../../source/development/contributing_environment.rst:76
msgid ""
"Make sure that you have :any:`cloned the repository "
"<contributing.forking>`"
msgstr ""

#: ../../source/development/contributing_environment.rst:77
msgid "``cd`` to the xorbits source directory"
msgstr ""

#: ../../source/development/contributing_environment.rst:82
msgid "Option 1: using mamba (recommended)"
msgstr ""

#: ../../source/development/contributing_environment.rst:84
msgid ""
"Install `mamba "
"<https://mamba.readthedocs.io/en/latest/installation.html>`_"
msgstr ""

#: ../../source/development/contributing_environment.rst:85
msgid "Make sure your mamba is up to date (``mamba update mamba``)"
msgstr ""

#: ../../source/development/contributing_environment.rst:94
msgid "Option 2: using pip"
msgstr ""

#: ../../source/development/contributing_environment.rst:96
msgid ""
"You'll need to have at least the :ref:`minimum Python version "
"<install.version>` that Xorbits supports. You also need to have "
"``setuptools`` 51.0.0 or later to build Xorbits."
msgstr ""

#: ../../source/development/contributing_environment.rst:99
msgid "**Unix**/**macOS with virtualenv**"
msgstr ""

#: ../../source/development/contributing_environment.rst:114
msgid "**Unix**/**macOS with pyenv**"
msgstr ""

#: ../../source/development/contributing_environment.rst:116
msgid ""
"Consult the docs for setting up pyenv `here "
"<https://github.com/pyenv/pyenv>`__."
msgstr ""

#: ../../source/development/contributing_environment.rst:135
msgid ""
"Below is a brief overview on how to set-up a virtual environment with "
"Powershell under Windows. For details please refer to the `official "
"virtualenv user guide "
"<https://virtualenv.pypa.io/en/latest/user_guide.html#activators>`__."
msgstr ""

#: ../../source/development/contributing_environment.rst:139
msgid ""
"Use an ENV_DIR of your choice. We'll use ``~\\\\virtualenvs\\\\xorbits-"
"dev`` where ``~`` is the folder pointed to by either ``$env:USERPROFILE``"
" (Powershell) or ``%USERPROFILE%`` (cmd.exe) environment variable. Any "
"parent directories should already exist."
msgstr ""

#: ../../source/development/contributing_environment.rst:156
msgid "Option 3: using Docker"
msgstr ""

#: ../../source/development/contributing_environment.rst:158
msgid ""
"Xorbits provides a ``DockerFile`` in the root directory to build a Docker"
" image with a full Xorbits development environment."
msgstr ""

#: ../../source/development/contributing_environment.rst:161
msgid "**Docker Commands**"
msgstr ""

#: ../../source/development/contributing_environment.rst:163
msgid "Build the Docker image::"
msgstr ""

#: ../../source/development/contributing_environment.rst:168
msgid "Run Container::"
msgstr ""

#: ../../source/development/contributing_environment.rst:175
msgid "*Even easier, you can integrate Docker with the following IDEs:*"
msgstr ""

#: ../../source/development/contributing_environment.rst:177
msgid "**Visual Studio Code**"
msgstr ""

#: ../../source/development/contributing_environment.rst:179
msgid ""
"You can use the DockerFile to launch a remote session with Visual Studio "
"Code, a popular free IDE, using the ``.devcontainer.json`` file. See "
"https://code.visualstudio.com/docs/remote/containers for details."
msgstr ""

#: ../../source/development/contributing_environment.rst:183
msgid "**PyCharm (Professional)**"
msgstr ""

#: ../../source/development/contributing_environment.rst:185
msgid ""
"Enable Docker support and use the Services tool window to build and "
"manage images as well as run and interact with containers. See "
"https://www.jetbrains.com/help/pycharm/docker.html for details."
msgstr ""

#: ../../source/development/contributing_environment.rst:190
msgid "Step 3: build and install Xorbits"
msgstr ""

#: ../../source/development/contributing_environment.rst:192
msgid "You can now run::"
msgstr ""

#: ../../source/development/contributing_environment.rst:198
msgid ""
"At this point you should be able to import Xorbits from your locally "
"built version::"
msgstr ""

#: ../../source/development/contributing_environment.rst:205
msgid ""
"This will create the new environment, and not touch any of your existing "
"environments, nor any existing Python installation."
msgstr ""

#: ../../source/development/contributing_environment.rst:209
msgid ""
"You will need to repeat this step each time the C extensions change, or "
"if you did a fetch and merge from ``upstream/main``."
msgstr ""

